name: Codebase Maintenance

on:
  schedule:
    - cron: '0 0 * * 0'  # Run weekly on Sundays
  workflow_dispatch: # Allow manual trigger

jobs:
  format:
    name: Code Formatting
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run formatter
      run: npm run format

    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: 'style: format code with prettier'
        title: 'üíÖ Code formatting updates'
        body: |
          This PR contains automated code formatting changes using Prettier.
          
          These changes:
          - Ensure consistent code style
          - Improve code readability
          - Follow project formatting guidelines
          
          Please review the changes to ensure they haven't affected functionality.
        branch: style/code-formatting
        base: main
        labels: style
        delete-branch: true

  lint:
    name: Code Linting
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run linter fix
      run: npm run lint:fix

    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: 'style: fix linting issues'
        title: 'üîß Fix linting issues'
        body: |
          This PR contains automated fixes for linting issues.
          
          These changes:
          - Fix ESLint warnings and errors
          - Improve code quality
          - Follow project coding standards
          
          Please review the changes to ensure they haven't affected functionality.
        branch: style/lint-fixes
        base: main
        labels: style
        delete-branch: true

  types:
    name: Type Checking
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run type check
      id: typecheck
      run: |
        npm run type-check || echo "has_errors=true" >> $GITHUB_OUTPUT

    - name: Create Issue
      if: steps.typecheck.outputs.has_errors == 'true'
      uses: actions/github-script@v6
      with:
        script: |
          await github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: '‚ö†Ô∏è TypeScript type check failures',
            body: `Type checking has failed in the maintenance workflow.
            
            Please review the workflow logs and fix any type errors:
            https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}
            
            Common fixes:
            - Add missing type definitions
            - Fix incorrect type usage
            - Update type declarations
            - Add type assertions where necessary`,
            labels: ['bug', 'typescript']
          });

  dead-code:
    name: Dead Code Detection
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'

    - name: Install dependencies
      run: |
        npm ci
        npm install -g ts-prune

    - name: Check for dead code
      id: deadcode
      run: |
        DEAD_CODE=$(ts-prune)
        echo "DEAD_CODE<<EOF" >> $GITHUB_ENV
        echo "$DEAD_CODE" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV
        
        if [ ! -z "$DEAD_CODE" ]; then
          echo "has_dead_code=true" >> $GITHUB_OUTPUT
        fi

    - name: Create Issue
      if: steps.deadcode.outputs.has_dead_code == 'true'
      uses: actions/github-script@v6
      with:
        script: |
          await github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: 'üßπ Dead code detected',
            body: `Dead code has been detected in the codebase.
            
            <details>
            <summary>Dead Code Report</summary>
            
            \`\`\`
            ${process.env.DEAD_CODE}
            \`\`\`
            
            </details>
            
            Please review these unused exports and either:
            - Remove the unused code
            - Add usage for the code
            - Mark the code as intentionally unused`,
            labels: ['cleanup', 'good first issue']
          });

  duplicate-code:
    name: Duplicate Code Detection
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'

    - name: Install dependencies
      run: |
        npm ci
        npm install -g jscpd

    - name: Check for duplicates
      id: duplicates
      run: |
        DUPLICATES=$(jscpd . --ignore "**/*.test.ts,**/*.spec.ts,**/node_modules/**" --format typescript --min-lines 5 --min-tokens 50 --output duplicates.xml)
        echo "DUPLICATES<<EOF" >> $GITHUB_ENV
        echo "$DUPLICATES" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV
        
        if [ -s duplicates.xml ]; then
          echo "has_duplicates=true" >> $GITHUB_OUTPUT
        fi

    - name: Create Issue
      if: steps.duplicates.outputs.has_duplicates == 'true'
      uses: actions/github-script@v6
      with:
        script: |
          await github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: 'üîÑ Code duplication detected',
            body: `Code duplication has been detected in the codebase.
            
            <details>
            <summary>Duplication Report</summary>
            
            \`\`\`
            ${process.env.DUPLICATES}
            \`\`\`
            
            </details>
            
            Please review these duplicated sections and consider:
            - Extracting shared functionality into reusable components
            - Creating utility functions for common operations
            - Using inheritance or composition patterns
            - Implementing proper abstractions`,
            labels: ['cleanup', 'good first issue']
          });

  notify:
    name: Notify Results
    needs: [format, lint, types, dead-code, duplicate-code]
    runs-on: ubuntu-latest
    if: always()

    steps:
    - name: Notify Status
      uses: slackapi/slack-github-action@v1.23.0
      with:
        channel-id: 'maintenance'
        slack-message: |
          Codebase maintenance workflow completed:
          
          Format: ${{ needs.format.result }}
          Lint: ${{ needs.lint.result }}
          Types: ${{ needs.types.result }}
          Dead Code: ${{ needs.dead-code.result }}
          Duplicates: ${{ needs.duplicate-code.result }}
          
          Check the workflow for details: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }} 